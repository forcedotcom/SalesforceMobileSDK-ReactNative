orbs:
  codecov: codecov/codecov@4.1.0

#  Xcode version announcments can be found here: https://discuss.circleci.com/c/announcements/
#  Each post contains a full image manifest, including iOS runtimes, devices, CocoaPods version, etc.
anchors:
  - &latest-xcode    "15.3.0"
  - &latest-ios      "17.4"
  - &min-ios         "16.4"
  - &device          "iPhone-SE-3rd-generation"
  - &invalid         ""

executors:
  mac:
    macos:
      xcode: *latest-xcode

version: 2.1
jobs:
  test-ios:
    parameters:
      xcode:
        type: string
        default: *latest-xcode
      ios:
        type: string
        default: *latest-ios
      device:
        type: string
        default: *device
    macos:
      xcode: << parameters.xcode >>
    resource_class: macos.m1.medium.gen1
    working_directory: ~/SalesforceMobileSDK-ReactNative
    environment:
      DEVICE: << parameters.device >>
      IOS_VERSION: << parameters.ios >>
      FASTLANE_SKIP_UPDATE_CHECK: "true"
    steps:
      - checkout
      - run:
          name: Installing Dependencies
          command: |
            brew install gnu-sed
            npm install -g typescript
            cd iosTests
            ./prepareios.js 
            mkdir -p ~/.gnupg
      - run:
          name: Creating test_credentials.json
          command: |
            cd iosTests
            ./create_test_credentials_from_env.js
      - run:
          name: Compile
          command:  |
            cd .circleci
            fastlane build
      - run:
          name: Run Tests
          command:  |
            cd .circleci
            fastlane test
      - codecov/upload
      - store_test_results:
          path: /Users/distiller/SalesforceMobileSDK-ReactNative/iosTests/ios/test_output
      - store_artifacts:
          path: /Users/distiller/SalesforceMobileSDK-ReactNative/iosTests/ios/test_output
          destination: Test-Results
      - store_artifacts:
          path: /Users/distiller/SalesforceMobileSDK-ReactNative/iosTests/ios/clangReport/
          destination: Static-Analysis

#  Potential parameters that can come from the project GUI Triggers
parameters:
  xcode:
    type: string
    default: *invalid
  ios:
    type: string
    default: *invalid
  device:
    type: string
    default: *device

workflows:
  version: 2

  pr-run-tests:
    when: 
      equal: [ "webhook", << pipeline.trigger_source >> ]
    jobs:
      - test-ios:
          context: 
            - iOS Unit Tests
            - iOS React Native
          filters:
            branches:
              only:
                - /pull.*/

  # Scheduled Trigger at 10 PM PST Sunday
  run-tests:
    when:
      and:
        - not: << pipeline.parameters.xcode >>
        - not:  
            equal: [ "webhook", << pipeline.trigger_source >> ]
    jobs:
      - test-ios:
          name: test ReactNative iOS << matrix.ios >>
          context: 
            - iOS Unit Tests
            - iOS React Native
          matrix:
            parameters:
              ios: [*min-ios, *latest-ios]

  # Scheduled Trigger (when beta exists) at 11 PM PST Sunday
  run-tests-beta:
    when:
      and:
        - << pipeline.parameters.xcode >>
        - << pipeline.parameters.ios >>
        - not:  
            equal: [ "webhook", << pipeline.trigger_source >> ]
    jobs:
      - test-ios:
          name: test ReactNative iOS << pipeline.parameters.ios >>
          context: 
            - iOS Unit Tests
            - iOS React Native
          matrix:
            parameters:
              xcode: [<< pipeline.parameters.xcode >>]
              ios: [<< pipeline.parameters.ios >>]
              device: [<< pipeline.parameters.device >>]