$device = ENV.has_key?('DEVICE') ? ENV['DEVICE'] : 'iPhone 13'
$ios = ENV.has_key?('IOS_VERSION') ? ENV['IOS_VERSION'] : '16.4'

lane :build do
    analyze_scheme("SalesforceReactTestApp")
end

lane :test do
    test_scheme("SalesforceReactTestApp")
end

def test_scheme(scheme)
    $device.gsub!(' ', '-')
    $ios.gsub!('.', '-')
    system('xcrun simctl delete test_device') or true
    sim_id = `xcrun simctl create test_device com.apple.CoreSimulator.SimDeviceType.#{$device} com.apple.CoreSimulator.SimRuntime.iOS-#{$ios}`.delete("\n")
    destination = "test_device (" + `instruments -s devices | grep test_device | awk -F"[()]" '{print $2}'`.delete("\n") + ")"
    
    scan(
        workspace: '../iosTests/ios/SalesforceReactTestApp.xcworkspace',
        scheme: scheme,
        device: destination,
        output_directory: './test_output',
        output_types: 'html,junit',
        code_coverage: true,
        skip_build: true
    )
end

def analyze_scheme(scheme)
    xcodebuild(
        xcargs: 'CLANG_ANALYZER_OUTPUT=plist-html CLANG_ANALYZER_OUTPUT_DIR=./clangReport RUN_CLANG_STATIC_ANALYZER=YES ARCHS=x86_64',
        workspace: '../iosTests/ios/SalesforceReactTestApp.xcworkspace',
        scheme: scheme,
        sdk: 'iphonesimulator',
    )
end